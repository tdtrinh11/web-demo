# Copy this file to .env and update values
SECRET_KEY=changeme
FLASK_ENV=development

# Cross-Platform SQL Server Configuration
# SQL Server instance (can be localhost, IP address, or server name)
SQL_SERVER=localhost
# SQL_SERVER=127.0.0.1
# SQL_SERVER=DESKTOP-ABC123\SQLEXPRESS          # Windows named instance
# SQL_SERVER=myserver.domain.com                # Remote server

# SQL Server port (default is 1433)
SQL_PORT=1433

# Database name
SQL_DATABASE=testdb

# SQL Server Authentication (username/password)
SQL_USERNAME=sa
SQL_PASSWORD=1

# ODBC Driver version (check available drivers with: python setup_sqlserver.py)
# Cross-platform options:
# - ODBC Driver 18 for SQL Server (recommended, works on Windows/macOS/Linux)
# - ODBC Driver 17 for SQL Server (works on Windows/macOS/Linux)
# - SQL Server Native Client 11.0 (Windows only, older)
SQL_DRIVER=ODBC Driver 18 for SQL Server

# Legacy SQLite configuration (not used with SQL Server)
DATABASE_URL=sqlite:///data.db

# Cross-Platform Notes:
# 1. For Windows Authentication (Windows only), comment out SQL_USERNAME and SQL_PASSWORD,
#    and modify config.py to use DATABASE_URI_WINDOWS_AUTH instead
# 2. For SQL Server Express on Windows: COMPUTERNAME\SQLEXPRESS
# 3. For named instances: SERVER\INSTANCENAME
# 4. For Docker SQL Server: typically localhost:1433
# 5. For Azure SQL: your-server.database.windows.net
